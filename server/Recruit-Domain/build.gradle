bootJar { enabled = false }
jar { enabled = true }

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'mysql:mysql-connector-java'
    // test h2
    testRuntimeOnly 'com.h2database:h2'
    implementation project(':Recruit-Common')
    implementation project(':Recruit-Infrastructure')
    //flyway
//    implementation 'org.flywaydb:flyway-core'
//    implementation 'org.flywaydb:flyway-mysql'
    //queryDsl 설정 부분
//    api ("com.querydsl:querydsl-core") // querydsl
//    api ("com.querydsl:querydsl-jpa") // querydsl
    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // cqrs
    api 'org.axonframework:axon-spring-boot-starter:4.6.3'
    api 'org.axonframework:axon-spring-boot-autoconfigure:4.6.3'
    //for @Nullable  https://velog.io/@saintho/javaxannotationmetawhennotfound
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}

//https://jojoldu.tistory.com/372
def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}